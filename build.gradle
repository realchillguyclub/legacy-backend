plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'

    // REST Docs
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'com.epages.restdocs-api-spec' version '0.19.2'
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'server'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //spring
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //database
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // gson
    implementation 'com.google.code.gson:gson:2.8.6'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2'
    testImplementation "org.testcontainers:testcontainers:1.19.0"
    testImplementation "org.testcontainers:junit-jupiter:1.19.0"

    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.google.code.gson:gson:2.9.0'

    //JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'

    // S3 AWS
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'

    //Firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // Health-Check
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // REST Docs & Swagger
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.19.2'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
}

// REST Docs & Swagger 설정
ext {
    snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

def serverUrl = "https://prev-illdan.store"

openapi3 {
    server = serverUrl
    title = "Legacy Illdan API Documentation"
    description = "Spring REST Docs with Swagger UI."
    version = "1.0.0"
    outputFileNamePrefix = 'open-api-3.0.1'
    format = 'json'
    outputDirectory = 'build/resources/main/static/docs'
}

tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn 'openapi3'

    delete file('src/main/resources/static/docs/')
    copy {
        from "build/resources/main/static/docs"
        into "src/main/resources/static/docs/"
    }
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

tasks.named("bootJar") {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
    dependsOn ':openapi3'
}

tasks.register('copyDocument', Copy) {
    dependsOn asciidoctor
    from file(project.layout.buildDirectory.dir("docs/asciidoc").get().asFile.path)
    into file("src/main/resources/static/docs")
}

tasks.named("build") {
    dependsOn copyDocument
}
